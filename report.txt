REPORT -- Assignment 3 & 4
---------------------------

Group members: Shirley (Zhaorong) Xia & Vrishti Dutta
_______________________________________________________________________________
Process you used to complete the assignment (including organization,
understanding the starter code, and building a solution):

We started this coding assignment with some basic knowledge of ray tracing from
attending lectures.
The implementaion of transformations of coordinate systems consolidated our 
understanding of lecture materials.
We resolved the bugs and challenges we encountered by conducting research online,
going to office hours, and discussing concepts with our fellow classmates.
We also drew diagrams to visualize our implementations, thus making it easier to 
break down, implement and debug.

In order to translate our theoretical knowledge to practice, we isolated what we
thought was the easiest object to render, the plane, and applied the series of
transformations (camera->world, model->world ...etc) to render it on screen.
However, this proved to be extremely challenging. Even though our theoretical 
understanding and mathematical calculations were correct, we couldn't get it to 
render correctly as shown on the handout. In the end we discovered that a 
misunderstanding of the alignment of the canonical plane (which lay along the 
x and y axis, we thought x and z) led us to apply the wrong transformations.

After resolving this difficult problem, we moved through the rest of the
assignment with relative ease.

_______________________________________________________________________________
Brief description code implemented (including "cruncy" part of the code):


First, we tackled the rendering of a general plane object only, whereby 
we ensured we understood all the functions we were required to write 
and ensuring we understand all the transformations to render an object.
Second, once we hand the plane rendering, we worked on rendering the spheres,

Our next step was to render the shadowing, as per the pseudocode, followed by
the recursing in rayTrace function to allow reflections, with the use of 
phong illuminations. This culminated our basic rendering of an image.

Later, we developed our image further by adding anti-aliasing, area lights, 
cylinderical object(s), texture mapping, multithreading, and environment map,
leading to a "neat" scene.

_______________________________________________________________________________
Easy and hard parts of the assigment:

We found this assignment generally very challenging as it had to be 
implemented in c, which requires direct memory management and resolving many
segmentation faults. Nevertheless, theory-wise, we had trouble understanding
which parts of the code we were to fill up and the coordinate system required
for rendering. Moreover, implementing the ray trace recursion was also 
challenging, however, the difficulty was alleviated by the tutorial slides.
For the more advanced ray tracing, we found area lights and environment mapping
harder to implement.

_______________________________________________________________________________
Our understanding of concepts:
	- Geometry (points, vectors, planes, spheres, intersections, normals, etc.):

	- Object transformations:

	- Projection and coordinate frames:

	- Illumination (the Phong model, basically):

_______________________________________________________________________________
The role of each member on the project:



